@import "mapping";
@import "colors/functions";
@import "colors/mixins";
@import "@material/textfield/mixins";
@import "@material/textfield/helper-text/mixins";
@import "@material/floating-label/mixins";

@mixin filledTextField($colorSet, $colorMap: $filledTextFieldMapping) {
  @include mdc-text-field-fill-color(ColorSet_getContainer($colorSet));

  @include ifColorMapHasKey($colorMap, ink) {
    @include mdc-text-field-ink-color(getColor($colorSet, $colorMap, ink));
    // @include mdc-states(getColor($colorSet, $colorMap, ink));
  }
  
  @include ifColorMapHasKey($colorMap, bottomLine) {
    @include mdc-text-field-bottom-line-color(getColor($colorSet, $colorMap, bottomLine));
  }
  
  @include ifColorMapHasKey($colorMap, helperText) {
    @include mdc-text-field-helper-text-color(getColor($colorSet, $colorMap, helperText));
  }
  
  @include ifColorMapHasKey($colorMap, textLabel) {
    @include mdc-text-field-label-color(getColor($colorSet, $colorMap, textLabel));
  }
  
  @include ifColorMapHasKey($colorMap, icon) {
    @include mdc-text-field-icon-color(getColor($colorSet, $colorMap, icon));
  }
  
  @include ifColorMapHasKey($colorMap, caret) {
    @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, caret));
  }
  
  @include ifColorMapHasKey($colorMap, activeBottomLine) {
    @include mdc-text-field-line-ripple-color(getColor($colorSet, $colorMap, activeBottomLine));
  }
  
  &.mdc-text-field--focused {
    @include ifColorMapHasKey($colorMap, activeTextLabel) {
      @include mdc-text-field-label-color(getColor($colorSet, $colorMap, activeTextLabel));
    }
    
    .mdc-floating-label {
      @include ifColorMapHasKey($colorMap, activeHelperText) {
        @include mdc-floating-label-ink-color(getColor($colorSet, $colorMap, activeHelperText));
      }
    }
  }
  
  &.mdc-text-field--invalid {
    @include ifColorMapHasKey($colorMap, errorCaret) {
      @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, errorCaret));
    }
  }
}

@mixin outlinedTextField($colorSet, $colorMap: $outlinedTextFieldMapping) {
  @include ifColorMapHasKey($colorMap, ink) {
    @include mdc-text-field-ink-color(getColor($colorSet, $colorMap, ink));
    // @include mdc-states(getColor($colorSet, $colorMap, ink));
  }
  
  @include ifColorMapHasKey($colorMap, helperText) {
    @include mdc-text-field-helper-text-color(getColor($colorSet, $colorMap, helperText));
  }
  
  @include ifColorMapHasKey($colorMap, textLabel) {
    @include mdc-text-field-label-color(getColor($colorSet, $colorMap, textLabel));
  }
  
  @include ifColorMapHasKey($colorMap, icon) {
    @include mdc-text-field-icon-color(getColor($colorSet, $colorMap, icon));
  }
  
  @include ifColorMapHasKey($colorMap, caret) {
    @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, caret));
  }
  
  @include ifColorMapHasKey($colorMap, outline) {
    @include mdc-text-field-outline-color(getColor($colorSet, $colorMap, outline));
  }
  
  @include ifColorMapHasKey($colorMap, hoverOutline) {
    @include mdc-text-field-hover-outline-color(getColor($colorSet, $colorMap, hoverOutline));
  }
  
  @include ifColorMapHasKey($colorMap, activeOutline) {
    @include mdc-text-field-focused-outline-color(getColor($colorSet, $colorMap, activeOutline));
  }
  
  &.mdc-text-field--invalid {
    @include ifColorMapHasKey($colorMap, errorOutline) {
      @include mdc-text-field-outline-color(getColor($colorSet, $colorMap, errorOutline));
    }
    
    @include ifColorMapHasKey($colorMap, errorOutline) {
      @include mdc-text-field-focused-outline-color(getColor($colorSet, $colorMap, errorOutline));
    }
    
    @include ifColorMapHasKey($colorMap, errorTextLabel) {
      @include mdc-text-field-label-color(getColor($colorSet, $colorMap, errorTextLabel));
    }
    
    @include ifColorMapHasKey($colorMap, errorCaret) {
      @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, errorCaret));
    }
    
    &.mdc-text-field--focused {
      @include ifColorMapHasKey($colorMap, errorTextLabel) {
        @include mdc-text-field-label-color(getColor($colorSet, $colorMap, errorTextLabel));
      }
    }
  }
  
  &.mdc-text-field--focused {
    @include ifColorMapHasKey($colorMap, activeTextLabel) {
      @include mdc-text-field-label-color(getColor($colorSet, $colorMap, activeTextLabel));
    }
    
    .mdc-floating-label {
      @include ifColorMapHasKey($colorMap, activeHelperText) {
        @include mdc-floating-label-ink-color(getColor($colorSet, $colorMap, activeHelperText));
      }
    }
  }
}

// *****************************************************************************
// Discrete theming methods per condition
// *****************************************************************************

// Default Outlined Text Field
@mixin defaultOutlinedTextField($colorSet, $colorMap: $defaultOutlinedTextFieldMapping) {
  @include mdc-text-field-ink-color(getColor($colorSet, $colorMap, ink));
  @include mdc-text-field-label-color(getColor($colorSet, $colorMap, textLabel));  
  @include mdc-text-field-icon-color(getColor($colorSet, $colorMap, icon));
  @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, caret));
  @include mdc-text-field-outline-color(getColor($colorSet, $colorMap, outline));
  @include mdc-text-field-focused-outline-color(getColor($colorSet, $colorMap, focusOutline));

  &.mdc-text-field--focused {
    @include mdc-text-field-label-color(getColor($colorSet, $colorMap, focusTextLabel));
  }
  
  .mdc-text-field-helper-text {
    @include mdc-text-field-helper-text-color(getColor($colorSet, $colorMap, helperText));
  }
}

// Error Outlined Text Field
@mixin errorOutlinedTextField($colorSet, $colorMap: $errorOutlinedTextFieldMapping) {
  &.mdc-text-field--invalid {
    @include defaultOutlinedTextField($colorSet, $colorMap);
  }
}

// Disabled Outlined Text Field
@mixin disabledOutlinedTextField($colorSet, $colorMap: $disabledOutlinedTextFieldMapping) {
  &.mdc-text-field--disabled {
    @include defaultOutlinedTextField($colorSet, $colorMap);
  }
}

// Default Filled Text Field
@mixin defaultFilledTextField($colorSet, $colorMap: $defaultFilledTextFieldMapping) {
  @include mdc-text-field-fill-color(ColorSet_getContainer($colorSet));
  @include mdc-text-field-ink-color(getColor($colorSet, $colorMap, ink));
  @include mdc-text-field-helper-text-color(getColor($colorSet, $colorMap, helperText));
  @include mdc-text-field-label-color(getColor($colorSet, $colorMap, textLabel));
  @include mdc-text-field-icon-color(getColor($colorSet, $colorMap, icon));
  @include mdc-text-field-caret-color(getColor($colorSet, $colorMap, caret));
  @include mdc-text-field-bottom-line-color(getColor($colorSet, $colorMap, bottomLine));
  @include mdc-text-field-line-ripple-color(getColor($colorSet, $colorMap, focusBottomLine));

  &.mdc-text-field--focused {
    @include mdc-text-field-label-color(getColor($colorSet, $colorMap, focusTextLabel));
  }
}

// Error Filled Text Field
@mixin errorFilledTextField($colorSet, $colorMap: $errorFilledTextFieldMapping) {
  &.mdc-text-field--invalid {
    @include defaultFilledTextField($colorSet, $colorMap);
  }
}

// Disabled Filled Text Field
@mixin disabledFilledTextField($colorSet, $colorMap: $disabledFilledTextFieldMapping) {
  &.mdc-text-field--disabled {
    @include defaultFilledTextField($colorSet, $colorMap);
  }
}
